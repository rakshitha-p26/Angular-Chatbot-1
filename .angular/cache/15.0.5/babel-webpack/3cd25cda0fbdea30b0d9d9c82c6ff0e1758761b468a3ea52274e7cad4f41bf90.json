{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MessageService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000';\n  }\n  sendMessage(message) {\n    console.log('service call' + message);\n    const url = `${this.baseUrl}/answer`; // changed the endpoint to `/answer`\n    const body = {\n      query: message\n    }; // data that we want to send to the server\n    return this.http.post(url, body); // sending a post request\n  }\n\n  questionGeneration(message) {\n    console.log('questionGeneration call' + message);\n    const url = `${this.baseUrl}/relatedquestions`; // changed the endpoint to `/answer`\n    const body = {\n      query: message\n    }; // data that we want to send to the server\n    return this.http.post(url, body); // sending a post request\n  }\n\n  sendFeedback(message, feedback) {\n    const url = '${this.baseUrl}/feedback';\n    const body = {\n      query: message,\n      feedback: feedback\n    };\n    return this.http.post(url, body);\n  }\n}\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient));\n};\nMessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEhB,YAAO,GAAG,uBAAuB;EAFF;EAIvCC,WAAW,CAACC,OAAe;IACzBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAACF,OAAO,CAAC;IACnC,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,SAAS,CAAC,CAAE;IACvC,MAAMC,IAAI,GAAG;MAAEC,KAAK,EAAEN;IAAO,CAAE,CAAC,CAAE;IAClC,OAAO,IAAI,CAACF,IAAI,CAACS,IAAI,CAACJ,GAAG,EAAEE,IAAI,CAAC,CAAC,CAAE;EACvC;;EAEAG,kBAAkB,CAACR,OAAe;IAChCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAACF,OAAO,CAAC;IAC9C,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,mBAAmB,CAAC,CAAE;IACjD,MAAMC,IAAI,GAAG;MAAEC,KAAK,EAAEN;IAAO,CAAE,CAAC,CAAE;IAClC,OAAO,IAAI,CAACF,IAAI,CAACS,IAAI,CAACJ,GAAG,EAAEE,IAAI,CAAC,CAAC,CAAE;EACrC;;EAEAI,YAAY,CAACT,OAAe,EAAEU,QAAgB;IAC5C,MAAMP,GAAG,GAAG,0BAA0B;IACtC,MAAME,IAAI,GAAG;MACXC,KAAK,EAAEN,OAAO;MACdU,QAAQ,EAAEA;KACX;IAED,OAAO,IAAI,CAACZ,IAAI,CAACS,IAAI,CAACJ,GAAG,EAAEE,IAAI,CAAC;EAClC;;AA3BaT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["MessageService","constructor","http","sendMessage","message","console","log","url","baseUrl","body","query","post","questionGeneration","sendFeedback","feedback","factory","providedIn"],"sourceRoot":"","sources":["/Users/I570594/Documents/Angular-Chatbot/chatbot/src/app/shared/service/message.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  constructor(private http: HttpClient) {}\n\n  private baseUrl = 'http://localhost:8000';\n\n  sendMessage(message: string): Observable<any> {\n    console.log('service call'+message)\n    const url = `${this.baseUrl}/answer`;  // changed the endpoint to `/answer`\n    const body = { query: message };  // data that we want to send to the server\n    return this.http.post(url, body);  // sending a post request\n}\n\nquestionGeneration(message: string): Observable<any> {\n  console.log('questionGeneration call'+message)\n  const url = `${this.baseUrl}/relatedquestions`;  // changed the endpoint to `/answer`\n  const body = { query: message };  // data that we want to send to the server\n  return this.http.post(url, body);  // sending a post request\n}\n\nsendFeedback(message: string, feedback: string) {\n  const url = '${this.baseUrl}/feedback';\n  const body = {\n    query: message,\n    feedback: feedback\n  };\n\n  return this.http.post(url, body);\n}\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}