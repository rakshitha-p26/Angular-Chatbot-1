{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MessageService {\n  constructor(http) {\n    this.http = http;\n    // sendMessage(message: string) {\n    //   console.log('message---'+message)\n    //   return this.http.post('http://localhost:3000/message', { prompt: message });\n    // }\n    this.baseUrl = 'http://localhost:8000';\n  }\n  sendMessage(query) {\n    console.log('service call' + query);\n    const url = `${this.baseUrl}/?query=${encodeURIComponent(query)}`;\n    return this.http.get(url);\n  }\n}\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient));\n};\nMessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAExB;IACA;IACA;IACA;IAEQ,YAAO,GAAG,uBAAuB;EAPF;EAUvCC,WAAW,CAACC,KAAa;IACvBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAACF,KAAK,CAAC;IACjC,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,WAAWC,kBAAkB,CAACL,KAAK,CAAC,EAAE;IACjE,OAAO,IAAI,CAACF,IAAI,CAACQ,GAAG,CAACH,GAAG,CAAC;EAC3B;;AAfWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAFb;AAAM","names":["MessageService","constructor","http","sendMessage","query","console","log","url","baseUrl","encodeURIComponent","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/I570594/Documents/Angular-Chatbot/chatbot/src/app/shared/service/message.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  constructor(private http: HttpClient) {}\n\n  // sendMessage(message: string) {\n  //   console.log('message---'+message)\n  //   return this.http.post('http://localhost:3000/message', { prompt: message });\n  // }\n\n  private baseUrl = 'http://localhost:8000';\n\n\n  sendMessage(query: string): Observable<any> {\n    console.log('service call'+query)\n    const url = `${this.baseUrl}/?query=${encodeURIComponent(query)}`;\n    return this.http.get(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}